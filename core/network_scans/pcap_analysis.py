from scapy.all import rdpcap, sniff, wrpcap, show_interfaces

def capture_packets(interface, packet_count, pcap_filename):
    # Capture packets from the given interface
    packets = sniff(iface=interface, count=packet_count)
    
    # Save captured packets to a pcap file
    wrpcap(pcap_filename, packets)

# show_interfaces()

# # Example usage
# capture_packets('Intel(R) Wi-Fi 6 AX200 160MHz', 100, 'captured_traffic.pcap')

def analyze_pcap(filename):
    packets = rdpcap(filename)

    http_traffic = []
    smtp_traffic = []
    pop3_traffic = []
    imap_traffic = []

    for packet in packets:
        # HTTP-verkeer wordt meestal uitgevoerd op poort 80 (niet-beveiligd) of 443 (beveiligd/HTTPS)
        if packet.haslayer('TCP') and (packet['TCP'].dport == 80 or packet['TCP'].sport == 80):
            http_traffic.append(packet)
        elif packet.haslayer('TCP') and (packet['TCP'].dport == 443 or packet['TCP'].sport == 443):
            http_traffic.append(packet)

        # SMTP-verkeer vindt meestal plaats op poort 25
        elif packet.haslayer('TCP') and (packet['TCP'].dport == 25 or packet['TCP'].sport == 25):
            smtp_traffic.append(packet)

        # POP3-verkeer vindt meestal plaats op poort 110
        elif packet.haslayer('TCP') and (packet['TCP'].dport == 110 or packet['TCP'].sport == 110):
            pop3_traffic.append(packet)

        # IMAP-verkeer vindt meestal plaats op poort 143
        elif packet.haslayer('TCP') and (packet['TCP'].dport == 143 or packet['TCP'].sport == 143):
            imap_traffic.append(packet)

    return http_traffic, smtp_traffic, pop3_traffic, imap_traffic

# # Testen van de functie
# filename = "captured_traffic.pcap"
# http, smtp, pop3, imap = analyze_pcap(filename)

# print(f"Total HTTP packets: {len(http)}")
# print(f"Total SMTP packets: {len(smtp)}")
# print(f"Total POP3 packets: {len(pop3)}")
# print(f"Total IMAP packets: {len(imap)}")
