from scapy.all import IP, TCP, sr1

def detect_os(host):
    # Stuur een TCP SYN-pakket naar een algemeen open poort (bijvoorbeeld 80)
    packet = IP(dst=host)/TCP(dport=80, flags="S")
    response = sr1(packet, timeout=2, verbose=0)
    
    if response is None:
        return "Unable to detect OS"

    # Haal TTL en window size uit het antwoord
    ttl = response[IP].ttl
    window_size = response[TCP].window

    # Eenvoudige heuristiek om het OS te detecteren
    if ttl <= 64:
        if window_size == 5840:
            return "Linux (Kernel 2.4, 2.6)"
        elif 9000 <= window_size <= 65535:
            return "Linux (Kernel 3.x)"
    elif ttl <= 128:
        if window_size == 8192:
            return "Windows (XP or 7)"
        elif window_size == 16384:
            return "Windows NT"
        elif window_size == 65535:
            return "Windows (10, 2016)"
    elif ttl <= 255:
        if window_size == 4128:
            return "Cisco Router (IOS)"
        elif window_size == 5720:
            return "Google Linux Server"
        else:
            return "Unknown OS"
    
    return "Unknown OS"

# # Testen van de functie
# host_ip = "192.168.0.1"  # Pas dit aan naar het IP-adres dat je wilt onderzoeken
# os_detected = detect_os(host_ip)
# print(f"Detected OS for {host_ip}: {os_detected}")
