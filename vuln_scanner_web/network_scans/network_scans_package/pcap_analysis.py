from scapy.all import rdpcap, sniff, wrpcap, show_interfaces, IP, TCP, ICMP

def capture_packets(interface, packet_count, pcap_filename):
    # Capture packets from the given interface
    packets = sniff(iface=interface, count=packet_count)
    
    # Save captured packets to a pcap file
    wrpcap(pcap_filename, packets)

# show_interfaces()

# # Example usage
# capture_packets('Intel(R) Wi-Fi 6 AX200 160MHz', 100, 'captured_traffic.pcap')

def analyze_pcap(filename):
    packets = rdpcap(filename)

    traffic_data = {
        'http_traffic': [],
        'ssh_traffic': [],
        'icmp_traffic': [],
        'smtp_traffic': [],
        'pop3_traffic': [],
        'imap_traffic': []
    }

    for packet in packets:
        if packet.haslayer('TCP'):
            # Check for HTTP and HTTPS traffic
            if packet.haslayer(TCP) and (packet[TCP].dport == 80 or packet[TCP].sport == 80 or packet[TCP].dport == 443 or packet[TCP].sport == 443):
                traffic_data['http_traffic'].append(packet)
            # Check for ICMP traffic
            elif packet.haslayer(ICMP):
                traffic_data['icmp_traffic'].append(packet)
                print("icmp")
            # Check for SSH traffic
            elif packet.haslayer(TCP) and (packet[TCP].dport == 22 or packet[TCP].sport == 22):
                traffic_data['ssh_traffic'].append(packet)
            # Check for SMTP traffic
            elif packet.haslayer(TCP) and (packet[TCP].dport == 25 or packet[TCP].sport == 25):                
                traffic_data['smtp_traffic'].append(packet)
            # Check for POP3 traffic
            elif packet.haslayer(TCP) and (packet[TCP].dport == 110 or packet[TCP].sport == 110):
                traffic_data['pop3_traffic'].append(packet)
            # Check for IMAP traffic
            elif packet.haslayer(TCP) and (packet[TCP].dport == 143 or packet[TCP].sport == 143):
                traffic_data['imap_traffic'].append(packet)

    return traffic_data

# # Testen van de functie
# filename = "captured_traffic.pcap"
# http, smtp, pop3, imap = analyze_pcap(filename)

# print(f"Total HTTP packets: {len(http)}")
# print(f"Total SMTP packets: {len(smtp)}")
# print(f"Total POP3 packets: {len(pop3)}")
# print(f"Total IMAP packets: {len(imap)}")
