from scapy.all import IP, TCP, sr1, RandShort
import nmap

def scapy_scan_ports(host, range_end=1024):
    open_ports = []

    for port in range(1, range_end + 1):
        packet = IP(dst=host)/TCP(sport=RandShort(), dport=port, flags="S")
        response = sr1(packet, timeout=1, verbose=0)

        if response and response.haslayer(TCP):
            # Check if the response contains TCP layer
            if response[TCP].flags == "SA":
                open_ports.append(port)

    return open_ports

def nmap_port_scan(target, port_range="1-1024"):
    # Initialize Nmap PortScanner
    nm = nmap.PortScanner()

    try:
        # Scanning the target for the specified port range
        nm.scan(target, ports=port_range)

        # Gathering and printing the scan results
        scan_results = []
        for host in nm.all_hosts():
            for proto in nm[host].all_protocols():
                lport = nm[host][proto].keys()
                for port in lport:
                    port_status = nm[host][proto][port]['state']
                    scan_results.append(f"Port: {port}, State: {port_status}")

        if not scan_results:
            return "No open ports found."
        else:
            return "\n".join(scan_results)

    except nmap.PortScannerError:
        return "Nmap Error: Make sure Nmap is installed and your input is correct"
    except Exception as e:
        return f"An error occurred: {str(e)}"

# # Testen van de functie
# host_ip = "192.168.0.1"  # Pas dit aan naar het IP-adres dat je wilt scannen
# open_ports = scan_ports(host_ip)
# print(f"Open poorten op {host_ip}: {open_ports}")
