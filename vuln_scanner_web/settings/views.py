import os
from django.conf import settings
from django.shortcuts import render, redirect
from .forms import WordlistUploadForm
from django.http import HttpResponseRedirect
from django.urls import reverse

# Create your views here.

def index(request):
    return render(request, 'settings/index.html', {'current_page': 'settings'})

def settings_view(request):
    success_message = ''  # Initialize an empty success message

    if request.method == 'POST':
        form = WordlistUploadForm(request.POST, request.FILES)
        if form.is_valid():
            handle_uploaded_file(request.FILES['wordlist'])
            success_message = 'Wordlist successfully uploaded.'
    else:
        form = WordlistUploadForm()
        
    # Get the list of wordlist files
    wordlist_dir = os.path.join(settings.BASE_DIR, 'config', 'word_lists')
    wordlist_files = os.listdir(wordlist_dir)

    context = {
        'form': form,
        'wordlist_files': wordlist_files,  # Add the wordlist files to the context,
        'success_message': success_message
    }
    return render(request, 'settings/index.html', context)

    # return render(request, 'settings/index.html', {'form': form})

def handle_uploaded_file(f):
    wordlist_dir = os.path.join(settings.BASE_DIR, 'config/word_lists')
    os.makedirs(wordlist_dir, exist_ok=True)  # Create dir if doesn't exist
    with open(os.path.join(wordlist_dir, f.name), 'wb+') as destination:
        for chunk in f.chunks():
            destination.write(chunk)
            
def delete_wordlist(request):
    if request.method == 'POST':
        filename = request.POST.get('filename')
        file_path = os.path.join(settings.BASE_DIR, 'config', 'word_lists', filename)
        if os.path.exists(file_path):
            os.remove(file_path)
    return HttpResponseRedirect(reverse('settings'))  # Redirect back to the settings page
