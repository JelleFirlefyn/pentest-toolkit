from django.shortcuts import render
from django.http import HttpResponse
from .forms import URLInputForm
from .web_server_package import server_software_eol
from .tasks import run_directory_traversal
from celery.result import AsyncResult
from django.http import JsonResponse

# Create your views here.


def index(request):
    return render(request, 'web_server_scans/index.html', {'current_page': 'web_server_scans'})

def fetch_task_results(request, task_id):
    task_result = AsyncResult(task_id)
    
    print(task_result.state)

    if task_result.ready():
        # Task has finished, return the result.
        return JsonResponse({
            'complete': True,
            'results': task_result.result  # Ensure this is JSON serializable
        })
    else:
        # Task is still running or pending.
        return JsonResponse({'complete': False})

def web_server_scans_view(request):
    result = None
    task_id = None
    if request.method == 'POST':
        form = URLInputForm(request.POST)
        if form.is_valid():
            url = form.cleaned_data['url']
            wordlist = form.cleaned_data['wordlist'] or 'test.txt'
            file_extensions = form.cleaned_data['file_extensions'] or '.php'
            threads = form.cleaned_data['threads'] or 200

            # Determine which button was clicked
            if 'check_server_software' in request.POST:
                checker = server_software_eol.ServerSoftwareCheck()
                result = checker.check(url)
                # Handle result for server software check
            elif 'directory_traversal' in request.POST:
                # Handle other functionality
                print("start task")
                # Trigger the Celery task
                task = run_directory_traversal.delay(url, wordlist, file_extensions, threads)
                task_id = task.id  # Capture the task ID
                pass
            # You can add more elif blocks for other buttons

    else:
        form = URLInputForm()

    return render(request, 'web_server_scans/index.html', {'form': form, 'result': result, 'task_id': task_id})
